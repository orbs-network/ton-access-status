html
    head
        link(href='status.css', rel='stylesheet')
        title TON-ACCESS Status Page
        
    body
        .cont
            h1 ORBS TON-Access Status Page
            .stats
                div Update time: #{new Date(succesTime).toLocaleString()}
                div Update duration: #{(updateDuration/1000).toFixed(2)} s
            
            .header
                .box.border Node
                each column in columns
                    .box.border #{column}
            each node in nodes
                .node
                    .box.border(class= node.Healthy == 1? "healthy":"down")                     
                        .edgeName #{node.BackendName}
                        div(title=node.NodeId) #{node.displayName}
                        div Edge-Health: #{node.Healthy}                                                
                        div #{node.Ip}
                        div(class="weight" title="traffic distribution weight") Weight: #{node.Weight}%                                                                         
                        a(href="#{node.mngr.nodesApi.url}" target="_blank" )
                            if !node.mngr.nodesApi.error
                                div(class="/mngr/nodes" title="Updated: #{node.mngr.updated}") &#10004; nodesApi 
                            else
                                div(class="/mngr/nodes error" title="#{node.mngr.nodesApi.error}") &#10006; nodesApi
                        a(href="#{node.mngr.url}" target="_blank" title="#{node.mngr.url}" style="width:100%")
                            if !node.mngr.error
                                div(class="mngr pass" title="Updated: #{node.mngr.updated}") &#10004; Manager 
                            else
                                div(class="mngr error" title="#{node.mngr.error}") &#10006; Manager
                        
                    each unit in node.units
                        .unit.box.border(class= unit.status === 200? "healthy":"down") 
                            a(href="#{unit.url}" target="_blank" )
                                if unit.error
                                    div error: #{unit.error}
                                else
                                    div status: #{unit.status}    
                                    div(class= unit.elapsedMS > 470? "slow":"ok") elapsed : #{unit.elapsedMS} ms                                    
                                    //div(class= unit.benchmarkMS > 0? "slow":"fast") benchmark : #{unit.benchmarkMS} ms
                                    div seqno: #{unit.seqno}
                            if !node.mngr.error                                    
                                if unit.mngrHealth !== 'missing'                                
                                    if unit.mngrHealth 
                                        div(class="mngr pass" title="test pass") &#10004; pass
                                    else
                                        div(class="mngr fail" title="#{node.mngr.errors[0]}") &#10006; fail
                                    
            if alert && alert.count > 0
                divs.alert Alerts
                    // /mngr/nodes api consist 
                    if alert.consistMngrNodesMsg && alert.consistMngrNodesMsg.length                 
                        div #{alert.consistMngrNodesMsg}
                    // protonet accross
                    if alert.protonetAcrossAllNodes                    
                        each val, key in alert.protonetAcrossAllNodes
                            if !val
                                div #{key} is not healthy on all nodes 
                            
            
            